{"uid":"18e281781be3efb","name":"Add Photo to Pet with Existing Photo","fullName":"TESTS.test_post_add_pet_photo.TestAddPhotoToPet#test_add_pet_photo_existing_photo","historyId":"689cb7baaf96e1497e904f2a7d3e9c0a","time":{"start":1694825762046,"stop":1694825762986,"duration":940},"description":"\n    Attempt to add a photo to a pet that already has a photo.\n\n    Precondition:\n    - User is authenticated and has a valid API key.\n    - There is at least one pet in the list.\n    - The pet already has a photo.\n\n    Expected result:\n    - The request returns a 400 error code, and the photo is not added.\n    ","descriptionHtml":"<pre><code>Attempt to add a photo to a pet that already has a photo.\n\nPrecondition:\n- User is authenticated and has a valid API key.\n- There is at least one pet in the list.\n- The pet already has a photo.\n\nExpected result:\n- The request returns a 400 error code, and the photo is not added.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_post_add_pet_photo.TestAddPhotoToPet object at 0x7fc138a4fe20>\ndelete_pet_after = {'auth_key': 'f9cb3212c6ea16115e81a25c10e4d8bb05427eb6a8578cb4d482ff28'}\n\n    @allure.title(\"Add Photo to Pet with Existing Photo\")\n    @allure.description(\"\"\"\n    Attempt to add a photo to a pet that already has a photo.\n    \n    Precondition:\n    - User is authenticated and has a valid API key.\n    - There is at least one pet in the list.\n    - The pet already has a photo.\n    \n    Expected result:\n    - The request returns a 400 error code, and the photo is not added.\n    \"\"\")\n    def test_add_pet_photo_existing_photo(self, delete_pet_after):\n>       pf.add_pet_photo(delete_pet_after, 0, ph, \"yes\", 400)\n\nTESTS/test_post_add_pet_photo.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nAPI_Logic/AddPetPhoto.py:38: in add_pet_photo\n    self.assert_and_print(status, result, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <API_Logic.AddPetPhoto.PetFriendsAddPhoto object at 0x7fc138972df0>, status = 200\nresult = {'_id': '', 'age': '0', 'animal_type': 'KyeIYGGiOw', 'created_at': '1694824773.6873698', ...}, expected = 400\n\n    def assert_and_print(self, status, result, expected):\n>       assert status == expected\nE       AssertionError\n\nAPI_Logic/PetFriends.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_pet_after","time":{"start":1694825761817,"stop":1694825762046,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"delete_pet_after::0","time":{"start":1694825762998,"stop":1694825763599,"duration":601},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Add Photo to Pet"},{"name":"suite","value":"Add Photo to Pet"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestAddPhotoToPet"},{"name":"host","value":"Fimas-MacBook-Pro.local"},{"name":"thread","value":"23548-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_post_add_pet_photo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"18e281781be3efb.json","parameterValues":[]}