{"uid":"1d3b8ee882923287","name":"Delete pet with invalid ID","fullName":"TESTS.test_delete_pet.TestDeletePet#test_delete_pet_invalid_id","historyId":"eba63c855daa72d2a18f4a400da3a461","time":{"start":1694825747142,"stop":1694825747485,"duration":343},"description":"\n    Attempt to delete a pet with an invalid ID.\n\n    Precondition:\n    - User is authenticated and has a valid API key.\n    - Provide an invalid pet ID.\n\n    Expected result:\n    - The request returns a 403 error code, and the pet is not deleted.\n    ","descriptionHtml":"<pre><code>Attempt to delete a pet with an invalid ID.\n\nPrecondition:\n- User is authenticated and has a valid API key.\n- Provide an invalid pet ID.\n\nExpected result:\n- The request returns a 403 error code, and the pet is not deleted.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_delete_pet.TestDeletePet object at 0x7fc138979100>\nsetup_key = {'auth_key': 'f9cb3212c6ea16115e81a25c10e4d8bb05427eb6a8578cb4d482ff28'}, setup_invalid_id = 'qweweq'\n\n    @allure.title(\"Delete pet with invalid ID\")\n    @allure.description(\"\"\"\n    Attempt to delete a pet with an invalid ID.\n    \n    Precondition:\n    - User is authenticated and has a valid API key.\n    - Provide an invalid pet ID.\n    \n    Expected result:\n    - The request returns a 403 error code, and the pet is not deleted.\n    \"\"\")\n    def test_delete_pet_invalid_id(self, setup_key, setup_invalid_id):\n>       pf.delete_pet_invalid_id(setup_key, setup_invalid_id)\n\nTESTS/test_delete_pet.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <API_Logic.DeletePet.PetFriendsDeletePet object at 0x7fc138979c70>\nheader = {'auth_key': 'f9cb3212c6ea16115e81a25c10e4d8bb05427eb6a8578cb4d482ff28'}, setup_id = 'qweweq'\n\n    def delete_pet_invalid_id(self, header, setup_id):\n        status = self.delete_pet(header, setup_id)\n    \n        print(\"\\n\", status)\n        print(setup_id)\n>       assert status == 403\nE       AssertionError\n\nAPI_Logic/DeletePet.py:50: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_key","time":{"start":1694825746892,"stop":1694825747141,"duration":249},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_invalid_id","time":{"start":1694825747141,"stop":1694825747141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup_invalid_id::0","time":{"start":1694825747571,"stop":1694825747571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_key::0","time":{"start":1694825747573,"stop":1694825747573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Delete Pet"},{"name":"feature","value":"Delete Pet"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestDeletePet"},{"name":"host","value":"Fimas-MacBook-Pro.local"},{"name":"thread","value":"23548-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_delete_pet"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1d3b8ee882923287.json","parameterValues":[]}