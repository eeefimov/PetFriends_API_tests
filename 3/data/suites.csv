"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Sep 16 10:46:47 GMT 2023","Sat Sep 16 10:46:47 GMT 2023","488","TESTS","Add Photo to Pet","TestAddPhotoToPet","","","Add Photo with Invalid Key","
    Attempt to add a photo to a pet with an invalid API key.

    Precondition:
    - User is not authenticated.

    Expected result:
    - The request returns a 403 error code, and the photo is not added.
    "
"passed","Sat Sep 16 10:47:16 GMT 2023","Sat Sep 16 10:47:16 GMT 2023","868","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Different Photo Types","
    Attempt to create a pet with a photo using different photo types (e.g., PNG).

    Precondition:
    - User has a valid API key.
    - Pet data is valid, but the photo type is different.

    Expected result:
    - Pet creation is successful, and the response returns HTTP status code 200.
    "
"passed","Sat Sep 16 10:47:06 GMT 2023","Sat Sep 16 10:47:06 GMT 2023","487","TESTS","Create Pet (Simple)","TestCreatePetSimple","","","Create pet with invalid API key","
    Attempt to create a pet with an invalid API key.

    Precondition:
    - User is not authenticated (invalid API key is provided).

    Expected result:
    - The request returns a 403 error code.
    "
"passed","Sat Sep 16 10:46:09 GMT 2023","Sat Sep 16 10:46:10 GMT 2023","731","TESTS","Get API Key","TestGetApiKey","","","Get API key using valid user values","
    Get API Key using valid user values as: password, email.

    Precondition:
    - User successfully registered with a valid password and email.

    Expected result:
    - Get API key which should be used for other API methods.
    "
"failed","Sat Sep 16 10:46:38 GMT 2023","Sat Sep 16 10:46:40 GMT 2023","2138","TESTS","Add Photo to Pet","TestAddPhotoToPet","","","Add Photo to Pet with Existing Photo","
    Attempt to add a photo to a pet that already has a photo.

    Precondition:
    - User is authenticated and has a valid API key.
    - There is at least one pet in the list.
    - The pet already has a photo.

    Expected result:
    - The request returns a 400 error code, and the photo is not added.
    "
"passed","Sat Sep 16 10:47:07 GMT 2023","Sat Sep 16 10:47:07 GMT 2023","635","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Valid Data","
    Create a pet with a photo using valid data.

    Precondition:
    - User has a valid API key.
    - Pet data is valid.

    Expected result:
    - Pet is successfully created, and the response returns HTTP status code 200.
    "
"passed","Sat Sep 16 10:46:12 GMT 2023","Sat Sep 16 10:46:13 GMT 2023","738","TESTS","Get API Key","TestGetApiKey","","","Get API key using invalid user values","
    Get API Key using invalid user values as: password, email.

    Precondition:
    - User uses invalid email and password, empty fields, or empty password field.

    Expected result:
    - Response returns error code 403.
    "
"failed","Sat Sep 16 10:46:45 GMT 2023","Sat Sep 16 10:46:47 GMT 2023","1669","TESTS","Add Photo to Pet","TestAddPhotoToPet","","","Add Photo with Invalid Photo Type","
    Attempt to add a photo with an invalid photo type to an existing pet.

    Precondition:
    - User is authenticated and has a valid API key.
    - There is at least one pet in the list.

    Expected result:
    - The request returns a 400 error code, and the photo is not added.
    "
"failed","Sat Sep 16 10:47:12 GMT 2023","Sat Sep 16 10:47:13 GMT 2023","634","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Empty Fields","
    Attempt to create a pet with a photo with empty fields.

    Precondition:
    - User has a valid API key.
    - Pet data contains empty fields.

    Expected result:
    - Pet creation is denied, and the response returns HTTP status code 400.
    "
"failed","Sat Sep 16 10:46:30 GMT 2023","Sat Sep 16 10:46:31 GMT 2023","470","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"passed","Sat Sep 16 10:46:16 GMT 2023","Sat Sep 16 10:46:17 GMT 2023","1713","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Valid Filter","
    Get the list of pets with a valid filter as: my_pets.

    Precondition:
    - User has a valid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 200.
    "
"failed","Sat Sep 16 10:46:21 GMT 2023","Sat Sep 16 10:46:22 GMT 2023","469","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"passed","Sat Sep 16 10:46:19 GMT 2023","Sat Sep 16 10:46:20 GMT 2023","478","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid API Key","
    Get the list of pets with an invalid API key and a valid filter as: my_pets.

    Precondition:
    - User has an invalid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 403.
    "
"passed","Sat Sep 16 10:47:25 GMT 2023","Sat Sep 16 10:47:27 GMT 2023","1809","TESTS","Update Pet Information","TestUpdatePetInfo","","","Update Pet Information with Invalid Key","
    Attempt to update a pet's information with an invalid API key.

    Precondition:
    - User is not authenticated.

    Expected result:
    - The request returns a 403 error code, and the pet's information is not updated.
    "
"passed","Sat Sep 16 10:47:28 GMT 2023","Sat Sep 16 10:47:29 GMT 2023","546","TESTS","Update Pet Information","TestUpdatePetInfo","","","Update Pet Information with None Pet ID","
    Attempt to update a pet's information with a None pet ID.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code, and the pet's information is not updated.
    "
"passed","Sat Sep 16 10:46:58 GMT 2023","Sat Sep 16 10:47:00 GMT 2023","1801","TESTS","Create Pet (Simple)","TestCreatePetSimple","","","Create pet with missing required fields","
    Attempt to create a pet with missing required fields.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code.
    "
"passed","Sat Sep 16 10:46:13 GMT 2023","Sat Sep 16 10:46:15 GMT 2023","1575","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Valid Filter","
    Get the list of pets with a valid filter as: my_pets.

    Precondition:
    - User has a valid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 200.
    "
"passed","Sat Sep 16 10:46:51 GMT 2023","Sat Sep 16 10:46:53 GMT 2023","1785","TESTS","Create Pet (Simple)","TestCreatePetSimple","","","Create pet with missing required fields","
    Attempt to create a pet with missing required fields.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code.
    "
"passed","Sat Sep 16 10:46:10 GMT 2023","Sat Sep 16 10:46:11 GMT 2023","818","TESTS","Get API Key","TestGetApiKey","","","Get API key using invalid user values","
    Get API Key using invalid user values as: password, email.

    Precondition:
    - User uses invalid email and password, empty fields, or empty password field.

    Expected result:
    - Response returns error code 403.
    "
"failed","Sat Sep 16 10:47:10 GMT 2023","Sat Sep 16 10:47:11 GMT 2023","812","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Empty Fields","
    Attempt to create a pet with a photo with empty fields.

    Precondition:
    - User has a valid API key.
    - Pet data contains empty fields.

    Expected result:
    - Pet creation is denied, and the response returns HTTP status code 400.
    "
"failed","Sat Sep 16 10:46:22 GMT 2023","Sat Sep 16 10:46:23 GMT 2023","471","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"failed","Sat Sep 16 10:47:15 GMT 2023","Sat Sep 16 10:47:15 GMT 2023","491","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Different Photo Types","
    Attempt to create a pet with a photo using different photo types (e.g., PNG).

    Precondition:
    - User has a valid API key.
    - Pet data is valid, but the photo type is different.

    Expected result:
    - Pet creation is successful, and the response returns HTTP status code 200.
    "
"failed","Sat Sep 16 10:47:11 GMT 2023","Sat Sep 16 10:47:12 GMT 2023","631","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Empty Fields","
    Attempt to create a pet with a photo with empty fields.

    Precondition:
    - User has a valid API key.
    - Pet data contains empty fields.

    Expected result:
    - Pet creation is denied, and the response returns HTTP status code 400.
    "
"failed","Sat Sep 16 10:46:27 GMT 2023","Sat Sep 16 10:46:27 GMT 2023","466","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"passed","Sat Sep 16 10:46:18 GMT 2023","Sat Sep 16 10:46:19 GMT 2023","737","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid API Key","
    Get the list of pets with an invalid API key and a valid filter as: my_pets.

    Precondition:
    - User has an invalid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 403.
    "
"passed","Sat Sep 16 10:47:08 GMT 2023","Sat Sep 16 10:47:08 GMT 2023","503","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Invalid API Key","
    Attempt to create a pet with a photo using an invalid API key.

    Precondition:
    - User has an invalid API key.
    - Pet data is valid.

    Expected result:
    - Pet creation is denied, and the response returns HTTP status code 403.
    "
"passed","Sat Sep 16 10:46:34 GMT 2023","Sat Sep 16 10:46:36 GMT 2023","1968","TESTS","Add Photo to Pet","TestAddPhotoToPet","","","Add Photo to Pet with Valid Photo","
    Add a valid photo to an existing pet.

    Precondition:
    - User is authenticated and has a valid API key.
    - There is at least one pet in the list.

    Expected result:
    - The photo is successfully added to the pet.
    "
"passed","Sat Sep 16 10:46:55 GMT 2023","Sat Sep 16 10:46:57 GMT 2023","1805","TESTS","Create Pet (Simple)","TestCreatePetSimple","","","Create pet with missing required fields","
    Attempt to create a pet with missing required fields.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code.
    "
"passed","Sat Sep 16 10:46:48 GMT 2023","Sat Sep 16 10:46:49 GMT 2023","1849","TESTS","Create Pet (Simple)","TestCreatePetSimple","","","Create pet with valid information","
    Create a pet with valid information and verify its presence in the list.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - A pet is successfully created, and its information is verified in the list.
    "
"failed","Sat Sep 16 10:46:24 GMT 2023","Sat Sep 16 10:46:24 GMT 2023","867","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"failed","Sat Sep 16 10:46:29 GMT 2023","Sat Sep 16 10:46:30 GMT 2023","730","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"passed","Sat Sep 16 10:46:11 GMT 2023","Sat Sep 16 10:46:11 GMT 2023","481","TESTS","Get API Key","TestGetApiKey","","","Get API key using invalid user values","
    Get API Key using invalid user values as: password, email.

    Precondition:
    - User uses invalid email and password, empty fields, or empty password field.

    Expected result:
    - Response returns error code 403.
    "
"passed","Sat Sep 16 10:46:01 GMT 2023","Sat Sep 16 10:46:02 GMT 2023","1748","TESTS","Delete Pet","TestDeletePet","","","Delete first valid pet","
    Delete the first valid pet in the list of my_pets.

    Precondition:
    - User is authenticated and has a valid API key.
    - There is at least one pet in the list.

    Expected result:
    - The pet is successfully deleted, and the total number of pets is reduced by one.
    "
"passed","Sat Sep 16 10:46:32 GMT 2023","Sat Sep 16 10:46:33 GMT 2023","479","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Other HTTP Methods","
    Get the list of pets using HTTP methods other than GET (e.g., PUT, POST, DELETE).

    Precondition:
    - User has a valid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 405 for PUT and DELETE methods, and 400 for POST method.
    "
"passed","Sat Sep 16 10:47:27 GMT 2023","Sat Sep 16 10:47:28 GMT 2023","544","TESTS","Update Pet Information","TestUpdatePetInfo","","","Update Pet Information with Invalid Pet ID","
    Attempt to update a pet's information with an invalid pet ID.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code, and the pet's information is not updated.
    "
"failed","Sat Sep 16 10:47:09 GMT 2023","Sat Sep 16 10:47:09 GMT 2023","688","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Empty Fields","
    Attempt to create a pet with a photo with empty fields.

    Precondition:
    - User has a valid API key.
    - Pet data contains empty fields.

    Expected result:
    - Pet creation is denied, and the response returns HTTP status code 400.
    "
"passed","Sat Sep 16 10:47:02 GMT 2023","Sat Sep 16 10:47:04 GMT 2023","1832","TESTS","Create Pet (Simple)","TestCreatePetSimple","","","Create pet with missing required fields","
    Attempt to create a pet with missing required fields.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code.
    "
"passed","Sat Sep 16 10:46:09 GMT 2023","Sat Sep 16 10:46:09 GMT 2023","817","TESTS","Delete Pet","TestDeletePet","","","Delete pet with invalid key","
    Attempt to delete a pet with an invalid API key.

    Precondition:
    - User is not authenticated (invalid API key is provided).

    Expected result:
    - The request returns a 403 error code, and the pet is not deleted.
    "
"failed","Sat Sep 16 10:46:26 GMT 2023","Sat Sep 16 10:46:27 GMT 2023","465","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"passed","Sat Sep 16 10:46:31 GMT 2023","Sat Sep 16 10:46:32 GMT 2023","466","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Other HTTP Methods","
    Get the list of pets using HTTP methods other than GET (e.g., PUT, POST, DELETE).

    Precondition:
    - User has a valid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 405 for PUT and DELETE methods, and 400 for POST method.
    "
"passed","Sat Sep 16 10:46:20 GMT 2023","Sat Sep 16 10:46:20 GMT 2023","483","TESTS","Get Pet List","TestGetPetList","","","Get Pet List without API Key","
    Get the list of pets without an API key and a valid filter as: my_pets.

    Precondition:
    - User does not provide an API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 403.
    "
"failed","Sat Sep 16 10:47:14 GMT 2023","Sat Sep 16 10:47:14 GMT 2023","500","TESTS","Create Pet","TestCreatePet","","","Create Pet with Photo - Different Photo Types","
    Attempt to create a pet with a photo using different photo types (e.g., PNG).

    Precondition:
    - User has a valid API key.
    - Pet data is valid, but the photo type is different.

    Expected result:
    - Pet creation is successful, and the response returns HTTP status code 200.
    "
"failed","Sat Sep 16 10:46:25 GMT 2023","Sat Sep 16 10:46:26 GMT 2023","469","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"failed","Sat Sep 16 10:46:07 GMT 2023","Sat Sep 16 10:46:08 GMT 2023","877","TESTS","Delete Pet","TestDeletePet","","","Delete pet with invalid ID","
    Attempt to delete a pet with an invalid ID.

    Precondition:
    - User is authenticated and has a valid API key.
    - Provide an invalid pet ID.

    Expected result:
    - The request returns a 403 error code, and the pet is not deleted.
    "
"passed","Sat Sep 16 10:46:20 GMT 2023","Sat Sep 16 10:46:21 GMT 2023","480","TESTS","Get Pet List","TestGetPetList","","","Get Pet List without API Key","
    Get the list of pets without an API key and a valid filter as: my_pets.

    Precondition:
    - User does not provide an API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 403.
    "
"passed","Sat Sep 16 10:46:03 GMT 2023","Sat Sep 16 10:46:06 GMT 2023","2994","TESTS","Delete Pet","TestDeletePet","","","Delete random valid pet","
    Delete a random valid pet in the list of my_pets.

    Precondition:
    - User is authenticated and has a valid API key.
    - There is at least one pet in the list.

    Expected result:
    - A random pet is successfully deleted, and the total number of pets is reduced by one.
    "
"passed","Sat Sep 16 10:47:17 GMT 2023","Sat Sep 16 10:47:20 GMT 2023","3262","TESTS","Update Pet Information","TestUpdatePetInfo","","","Update Pet Information with Valid Data","
    Update a pet's information with valid data.

    Precondition:
    - User is authenticated and has a valid API key.
    - There is at least one pet in the list.

    Expected result:
    - The pet's information is successfully updated.
    "
"passed","Sat Sep 16 10:46:33 GMT 2023","Sat Sep 16 10:46:34 GMT 2023","804","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Other HTTP Methods","
    Get the list of pets using HTTP methods other than GET (e.g., PUT, POST, DELETE).

    Precondition:
    - User has a valid API key.
    - The filter 'my_pets' is valid.

    Expected result:
    - Response returns HTTP status code 405 for PUT and DELETE methods, and 400 for POST method.
    "
"failed","Sat Sep 16 10:46:28 GMT 2023","Sat Sep 16 10:46:28 GMT 2023","470","TESTS","Get Pet List","TestGetPetList","","","Get Pet List with Invalid Filter","
    Get the list of pets with an invalid filter as: ' ' (empty string).

    Precondition:
    - User has a valid API key.
    - The filter is invalid (empty string).

    Expected result:
    - Response returns HTTP status code 422.
    "
"passed","Sat Sep 16 10:47:21 GMT 2023","Sat Sep 16 10:47:24 GMT 2023","3222","TESTS","Update Pet Information","TestUpdatePetInfo","","","Update Pet Information with Random Pet Number","
    Update a pet's information with a random pet number.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The pet's information is successfully updated.
    "
"passed","Sat Sep 16 10:46:11 GMT 2023","Sat Sep 16 10:46:12 GMT 2023","743","TESTS","Get API Key","TestGetApiKey","","","Get API key using invalid user values","
    Get API Key using invalid user values as: password, email.

    Precondition:
    - User uses invalid email and password, empty fields, or empty password field.

    Expected result:
    - Response returns error code 403.
    "
"failed","Sat Sep 16 10:46:43 GMT 2023","Sat Sep 16 10:46:44 GMT 2023","1898","TESTS","Add Photo to Pet","TestAddPhotoToPet","","","Add Photo to Pet with Invalid Pet ID","
    Attempt to add a photo to a non-existing pet.

    Precondition:
    - User is authenticated and has a valid API key.

    Expected result:
    - The request returns a 400 error code, and the photo is not added.
    "
