{"uid":"9ebcfe9c266b24b1","name":"Add Photo to Pet with Existing Photo","fullName":"TESTS.test_post_add_pet_photo.TestAddPhotoToPet#test_add_pet_photo_existing_photo","historyId":"689cb7baaf96e1497e904f2a7d3e9c0a","time":{"start":1694861198630,"stop":1694861200768,"duration":2138},"description":"\n    Attempt to add a photo to a pet that already has a photo.\n\n    Precondition:\n    - User is authenticated and has a valid API key.\n    - There is at least one pet in the list.\n    - The pet already has a photo.\n\n    Expected result:\n    - The request returns a 400 error code, and the photo is not added.\n    ","descriptionHtml":"<pre><code>Attempt to add a photo to a pet that already has a photo.\n\nPrecondition:\n- User is authenticated and has a valid API key.\n- There is at least one pet in the list.\n- The pet already has a photo.\n\nExpected result:\n- The request returns a 400 error code, and the photo is not added.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_post_add_pet_photo.TestAddPhotoToPet object at 0x7f4201eae520>\ndelete_pet_after = {'auth_key': 'f9cb3212c6ea16115e81a25c10e4d8bb05427eb6a8578cb4d482ff28'}\n\n    @allure.title(\"Add Photo to Pet with Existing Photo\")\n    @allure.description(\"\"\"\n    Attempt to add a photo to a pet that already has a photo.\n    \n    Precondition:\n    - User is authenticated and has a valid API key.\n    - There is at least one pet in the list.\n    - The pet already has a photo.\n    \n    Expected result:\n    - The request returns a 400 error code, and the photo is not added.\n    \"\"\")\n    def test_add_pet_photo_existing_photo(self, delete_pet_after):\n>       pf.add_pet_photo(delete_pet_after, 0, ph, \"yes\", 400)\n\nTESTS/test_post_add_pet_photo.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAPI_Logic/AddPetPhoto.py:37: in add_pet_photo\n    self.assert_and_print(status, result, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <API_Logic.AddPetPhoto.PetFriendsAddPhoto object at 0x7f4201eaed60>\nstatus = 200\nresult = {'_id': '', 'age': '4', 'animal_type': 'bJpCWzpaLU', 'created_at': '1694861190.0276783', ...}\nexpected = 400\n\n    def assert_and_print(self, status, result, expected):\n>       assert status == expected\nE       AssertionError\n\nAPI_Logic/PetFriends.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_pet_after","time":{"start":1694861198149,"stop":1694861198629,"duration":480},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Attempt to add a photo to a pet that already has a photo.\n\n    Precondition:\n    - User is authenticated and has a valid API key.\n    - There is at least one pet in the list.\n    - The pet already has a photo.\n\n    Expected result:\n    - The request returns a 400 error code, and the photo is not added.\n    ","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_post_add_pet_photo.TestAddPhotoToPet object at 0x7f4201eae520>\ndelete_pet_after = {'auth_key': 'f9cb3212c6ea16115e81a25c10e4d8bb05427eb6a8578cb4d482ff28'}\n\n    @allure.title(\"Add Photo to Pet with Existing Photo\")\n    @allure.description(\"\"\"\n    Attempt to add a photo to a pet that already has a photo.\n    \n    Precondition:\n    - User is authenticated and has a valid API key.\n    - There is at least one pet in the list.\n    - The pet already has a photo.\n    \n    Expected result:\n    - The request returns a 400 error code, and the photo is not added.\n    \"\"\")\n    def test_add_pet_photo_existing_photo(self, delete_pet_after):\n>       pf.add_pet_photo(delete_pet_after, 0, ph, \"yes\", 400)\n\nTESTS/test_post_add_pet_photo.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nAPI_Logic/AddPetPhoto.py:37: in add_pet_photo\n    self.assert_and_print(status, result, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <API_Logic.AddPetPhoto.PetFriendsAddPhoto object at 0x7f4201eaed60>\nstatus = 200\nresult = {'_id': '', 'age': '4', 'animal_type': 'bJpCWzpaLU', 'created_at': '1694861190.0276783', ...}\nexpected = 400\n\n    def assert_and_print(self, status, result, expected):\n>       assert status == expected\nE       AssertionError\n\nAPI_Logic/PetFriends.py:32: AssertionError","steps":[],"attachments":[{"uid":"c130951ebc41753a","name":"stdout","source":"c130951ebc41753a.txt","type":"text/plain","size":13440}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"delete_pet_after::0","time":{"start":1694861200777,"stop":1694861202541,"duration":1764},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Add Photo to Pet"},{"name":"suite","value":"Add Photo to Pet"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestAddPhotoToPet"},{"name":"host","value":"fv-az246-628"},{"name":"thread","value":"2285-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_post_add_pet_photo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"dc6d48de3424cb45","reportUrl":"https://eeefimov.github.io/PetFriends_API_tests/2//#testresult/dc6d48de3424cb45","status":"failed","statusDetails":"AssertionError","time":{"start":1694861033781,"stop":1694861035848,"duration":2067}},{"uid":"2871a6a52a91820e","reportUrl":"https://eeefimov.github.io/PetFriends_API_tests/1//#testresult/2871a6a52a91820e","status":"failed","statusDetails":"AssertionError","time":{"start":1694860198471,"stop":1694860200554,"duration":2083}}]},"tags":[]},"source":"9ebcfe9c266b24b1.json","parameterValues":[]}